//启动服务器
vagrant up  vagrant ssh
//生成秘钥
php artisan key:generate

//命令行测试
php artisan tinker

//新建文件
touch resources/views/pages/email_verify_notice.blade.php

//创建数据库迁移文件  --table=users 参数是告诉 Laravel 我们这个迁移文件准备对 users 表进行变更，Laravel 就会帮我们生成好相关的代码
php artisan make:migration users_add_email_verified --table=users

//创建中间件 生成的中间件位于 app/Http/Middleware 目录下：
php artisan make:middleware CheckIfEmailVerified

//生成消息通知类
php artisan make:notification EmailVerificationNotification

//生成控制器
php artisan make:controller EmailVerificationController

//Laravel 提供了 make:listener 命令来快速创建一个事件的监听器：   生成的监听器文件在 app/Listeners 目录下：
php artisan make:listener RegisteredListener

//创建处理异常控制器
php artisan make:exception InvalidRequestException

//通过 make:model 命令来创建一个新的模型：   -fm 参数代表同时生成 factory 工厂文件和 migration 数据库迁移文件

php artisan make:model Models/UserAddress -fm

//省市县 地址库
 yarn add china-area-data

//首先通过 yarn 引入 sweetalert 这个库，sweetalert 可以用来展示比较美观的弹出提示框：  http://mishengqiang.com/sweetalert2/
 yarn add sweetalert

 //创建权限策略
 php artisan make:policy UserAddressPolicy

//Laravel-Admin 的控制器创建方式与普通的控制器创建方式不太一样，要用 admin:make 来创建：
php artisan admin:make UsersController --model=App\\Models\\User

//创建模型
php artisan make:model Models/Product -mf

// git退回版本 复制对应的commit的那串编码,
git reset --hard 81956e4de1e7d81a3040df9aacd41aa3763b3eec

//迁移数据库
php artisan migrate

//回滚最后一次迁移
php artisan admin:make CouponCodesController --model=App\\Models\\CouponCode

//回滚应用程序中的所有迁移
php artisan migrate:reset

//通过 make:job 命令来创建一个任务 创建的任务类保存在 app/Jobs 目录下
php artisan queue:work

//要使用 redis 作为队列驱动，我们还需要引入 predis/predis 这个包
composer require predis/predis

//启动队列处理器
php artisan queue:work

//支付类库   config:clear 执行
composer require yansongda/pay

//支付宝测试账号密码
bfjtrs7094@sandbox.com 111111

//支付宝测试平台
 https://openhome.alipay.com/platform/appDaily.htm?tab=info

//创建支付成功事件
php artisan make:event OrderPaid

//创建监听器  我们希望订单支付之后对应的商品销量会对应地增加，所以创建一个更新商品销量的监听器
php artisan make:listener UpdateProductSoldCount --event=OrderPaid

//创建监听器来执行发送邮件的动作
php artisan make:listener SendOrderPaidMail --event=OrderPaid

//时间监听器
php artisan make:listener UpdateProductRating --event=OrderReviewed

//在 EventServiceProvider 注册事件和处理的关联 app/Providers/EventServiceProvider.php

//laravel-admin 创建控制器
php artisan admin:make CouponCodesController --model=App\\Models\\CouponCode
